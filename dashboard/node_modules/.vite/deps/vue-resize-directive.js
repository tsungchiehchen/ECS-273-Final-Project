import {
  __commonJS
} from "./chunk-MB5FDF5C.js";

// node_modules/css-element-queries/src/ResizeSensor.js
var require_ResizeSensor = __commonJS({
  "node_modules/css-element-queries/src/ResizeSensor.js"(exports, module) {
    "use strict";
    (function(root, factory) {
      if (typeof define === "function" && define.amd) {
        define(factory);
      } else if (typeof exports === "object") {
        module.exports = factory();
      } else {
        root.ResizeSensor = factory();
      }
    })(typeof window !== "undefined" ? window : exports, function() {
      if (typeof window === "undefined") {
        return null;
      }
      var globalWindow = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
      var requestAnimationFrame = globalWindow.requestAnimationFrame || globalWindow.mozRequestAnimationFrame || globalWindow.webkitRequestAnimationFrame || function(fn) {
        return globalWindow.setTimeout(fn, 20);
      };
      var cancelAnimationFrame = globalWindow.cancelAnimationFrame || globalWindow.mozCancelAnimationFrame || globalWindow.webkitCancelAnimationFrame || function(timer) {
        globalWindow.clearTimeout(timer);
      };
      function forEachElement(elements, callback) {
        var elementsType = Object.prototype.toString.call(elements);
        var isCollectionTyped = "[object Array]" === elementsType || "[object NodeList]" === elementsType || "[object HTMLCollection]" === elementsType || "[object Object]" === elementsType || "undefined" !== typeof jQuery && elements instanceof jQuery || "undefined" !== typeof Elements && elements instanceof Elements;
        var i = 0, j = elements.length;
        if (isCollectionTyped) {
          for (; i < j; i++) {
            callback(elements[i]);
          }
        } else {
          callback(elements);
        }
      }
      function getElementSize(element) {
        if (!element.getBoundingClientRect) {
          return {
            width: element.offsetWidth,
            height: element.offsetHeight
          };
        }
        var rect = element.getBoundingClientRect();
        return {
          width: Math.round(rect.width),
          height: Math.round(rect.height)
        };
      }
      function setStyle(element, style) {
        Object.keys(style).forEach(function(key) {
          element.style[key] = style[key];
        });
      }
      var ResizeSensor = function(element, callback) {
        var lastAnimationFrameForInvisibleCheck = 0;
        function EventQueue() {
          var q = [];
          this.add = function(ev) {
            q.push(ev);
          };
          var i, j;
          this.call = function(sizeInfo) {
            for (i = 0, j = q.length; i < j; i++) {
              q[i].call(this, sizeInfo);
            }
          };
          this.remove = function(ev) {
            var newQueue = [];
            for (i = 0, j = q.length; i < j; i++) {
              if (q[i] !== ev)
                newQueue.push(q[i]);
            }
            q = newQueue;
          };
          this.length = function() {
            return q.length;
          };
        }
        function attachResizeEvent(element2, resized) {
          if (!element2)
            return;
          if (element2.resizedAttached) {
            element2.resizedAttached.add(resized);
            return;
          }
          element2.resizedAttached = new EventQueue();
          element2.resizedAttached.add(resized);
          element2.resizeSensor = document.createElement("div");
          element2.resizeSensor.dir = "ltr";
          element2.resizeSensor.className = "resize-sensor";
          var style = {
            pointerEvents: "none",
            position: "absolute",
            left: "0px",
            top: "0px",
            right: "0px",
            bottom: "0px",
            overflow: "hidden",
            zIndex: "-1",
            visibility: "hidden",
            maxWidth: "100%"
          };
          var styleChild = {
            position: "absolute",
            left: "0px",
            top: "0px",
            transition: "0s"
          };
          setStyle(element2.resizeSensor, style);
          var expand = document.createElement("div");
          expand.className = "resize-sensor-expand";
          setStyle(expand, style);
          var expandChild = document.createElement("div");
          setStyle(expandChild, styleChild);
          expand.appendChild(expandChild);
          var shrink = document.createElement("div");
          shrink.className = "resize-sensor-shrink";
          setStyle(shrink, style);
          var shrinkChild = document.createElement("div");
          setStyle(shrinkChild, styleChild);
          setStyle(shrinkChild, { width: "200%", height: "200%" });
          shrink.appendChild(shrinkChild);
          element2.resizeSensor.appendChild(expand);
          element2.resizeSensor.appendChild(shrink);
          element2.appendChild(element2.resizeSensor);
          var computedStyle = window.getComputedStyle(element2);
          var position = computedStyle ? computedStyle.getPropertyValue("position") : null;
          if ("absolute" !== position && "relative" !== position && "fixed" !== position && "sticky" !== position) {
            element2.style.position = "relative";
          }
          var dirty = false;
          var rafId = 0;
          var size = getElementSize(element2);
          var lastWidth = 0;
          var lastHeight = 0;
          var initialHiddenCheck = true;
          lastAnimationFrameForInvisibleCheck = 0;
          var resetExpandShrink = function() {
            var width = element2.offsetWidth;
            var height = element2.offsetHeight;
            expandChild.style.width = width + 10 + "px";
            expandChild.style.height = height + 10 + "px";
            expand.scrollLeft = width + 10;
            expand.scrollTop = height + 10;
            shrink.scrollLeft = width + 10;
            shrink.scrollTop = height + 10;
          };
          var reset = function() {
            if (initialHiddenCheck) {
              var invisible = element2.offsetWidth === 0 && element2.offsetHeight === 0;
              if (invisible) {
                if (!lastAnimationFrameForInvisibleCheck) {
                  lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function() {
                    lastAnimationFrameForInvisibleCheck = 0;
                    reset();
                  });
                }
                return;
              } else {
                initialHiddenCheck = false;
              }
            }
            resetExpandShrink();
          };
          element2.resizeSensor.resetSensor = reset;
          var onResized = function() {
            rafId = 0;
            if (!dirty)
              return;
            lastWidth = size.width;
            lastHeight = size.height;
            if (element2.resizedAttached) {
              element2.resizedAttached.call(size);
            }
          };
          var onScroll = function() {
            size = getElementSize(element2);
            dirty = size.width !== lastWidth || size.height !== lastHeight;
            if (dirty && !rafId) {
              rafId = requestAnimationFrame(onResized);
            }
            reset();
          };
          var addEvent = function(el, name, cb) {
            if (el.attachEvent) {
              el.attachEvent("on" + name, cb);
            } else {
              el.addEventListener(name, cb);
            }
          };
          addEvent(expand, "scroll", onScroll);
          addEvent(shrink, "scroll", onScroll);
          lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function() {
            lastAnimationFrameForInvisibleCheck = 0;
            reset();
          });
        }
        forEachElement(element, function(elem) {
          attachResizeEvent(elem, callback);
        });
        this.detach = function(ev) {
          if (!lastAnimationFrameForInvisibleCheck) {
            cancelAnimationFrame(lastAnimationFrameForInvisibleCheck);
            lastAnimationFrameForInvisibleCheck = 0;
          }
          ResizeSensor.detach(element, ev);
        };
        this.reset = function() {
          element.resizeSensor.resetSensor();
        };
      };
      ResizeSensor.reset = function(element) {
        forEachElement(element, function(elem) {
          elem.resizeSensor.resetSensor();
        });
      };
      ResizeSensor.detach = function(element, ev) {
        forEachElement(element, function(elem) {
          if (!elem)
            return;
          if (elem.resizedAttached && typeof ev === "function") {
            elem.resizedAttached.remove(ev);
            if (elem.resizedAttached.length())
              return;
          }
          if (elem.resizeSensor) {
            if (elem.contains(elem.resizeSensor)) {
              elem.removeChild(elem.resizeSensor);
            }
            delete elem.resizeSensor;
            delete elem.resizedAttached;
          }
        });
      };
      if (typeof MutationObserver !== "undefined") {
        var observer = new MutationObserver(function(mutations) {
          for (var i in mutations) {
            if (mutations.hasOwnProperty(i)) {
              var items = mutations[i].addedNodes;
              for (var j = 0; j < items.length; j++) {
                if (items[j].resizeSensor) {
                  ResizeSensor.reset(items[j]);
                }
              }
            }
          }
        });
        document.addEventListener("DOMContentLoaded", function(event) {
          observer.observe(document.body, {
            childList: true,
            subtree: true
          });
        });
      }
      return ResizeSensor;
    });
  }
});

// node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root.Date.now();
    };
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = debounce;
  }
});

// node_modules/vue-resize-directive/dist/Vueresize.js
var require_Vueresize = __commonJS({
  "node_modules/vue-resize-directive/dist/Vueresize.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e(require_ResizeSensor(), require_lodash()) : "function" == typeof define && define.amd ? define(["css-element-queries/src/ResizeSensor.js", "lodash.debounce"], e) : "object" == typeof exports ? exports.Vueresize = e(require_ResizeSensor(), require_lodash()) : t.Vueresize = e(t.ResizeSensor, t._);
    }(exports, function(t, e) {
      return function(t2) {
        function e2(r) {
          if (n[r])
            return n[r].exports;
          var o = n[r] = { exports: {}, id: r, loaded: false };
          return t2[r].call(o.exports, o, o.exports, e2), o.loaded = true, o.exports;
        }
        var n = {};
        return e2.m = t2, e2.c = n, e2.p = "/", e2(0);
      }([function(t2, e2, n) {
        var r, o, i;
        !function(s, u) {
          o = [t2, e2, n(10), n(38), n(39), n(9), n(37)], r = u, i = "function" == typeof r ? r.apply(e2, o) : r, !(void 0 !== i && (t2.exports = i));
        }(this, function(t3, e3, n2, r2, o2) {
          "use strict";
          function i2(t4) {
            return t4 && t4.__esModule ? t4 : { default: t4 };
          }
          function s(t4) {
            if (!t4)
              return { delay: _, initial: false };
            var e4 = t4.initial, n3 = void 0 !== e4 && e4, r3 = (0, h.default)(t4).map(function(t5) {
              return parseInt(t5);
            }).find(function(t5) {
              return !isNaN(t5);
            });
            return r3 = r3 || _, { delay: r3, initial: n3 };
          }
          function u(t4, e4) {
            var n3 = { root: document.documentElement }, r3 = new IntersectionObserver(function(t5, n4) {
              t5.forEach(function(t6) {
                t6.isIntersecting && (e4(), n4.disconnect());
              });
            }, n3);
            return r3.observe(t4), r3;
          }
          function c(t4, e4) {
            var n3 = e4.value, r3 = e4.arg, o3 = e4.options, i3 = function() {
              return n3(t4);
            };
            switch (r3) {
              case "debounce":
                i3 = v(function() {
                  return n3(t4);
                }, o3.delay);
                break;
              case "throttle":
                i3 = v(function() {
                  return n3(t4);
                }, o3.delay, { leading: true, trailing: true, maxWait: o3.delay });
            }
            var s2 = new l.default(t4, i3);
            return o3.initial && n3(t4), s2;
          }
          function a(t4, e4, n3) {
            var r3 = e4.value, o3 = e4.arg, i3 = e4.modifiers, h2 = n3.context;
            if (!r3 || "function" != typeof r3)
              return void console.warn("v-resize should received a function as value");
            var l2 = s(i3);
            return h2 && h2.$el === t4 && h2.$once("hook:deactivated", function() {
              f(t4), h2.$once("hook:activated", function() {
                a(t4, { value: r3, arg: o3, modifiers: i3 }, { context: h2 });
              });
            }), t4.offsetParent ? void c(t4, { value: r3, arg: o3, options: l2 }) : (l2.initial = true, void (t4.__visibility__listener__ = u(t4, function() {
              return c(t4, { value: r3, arg: o3, options: l2 });
            })));
          }
          function f(t4) {
            t4.__visibility__listener__ && t4.__visibility__listener__.disconnect(), t4.resizeSensor && l.default.detach(t4);
          }
          Object.defineProperty(e3, "__esModule", { value: true });
          var h = i2(n2), l = i2(r2), p = i2(o2), d = p.default.debounce, v = void 0 === d ? p.default : d, _ = 150;
          e3.default = { inserted: a, unbind: f }, t3.exports = e3.default;
        });
      }, function(t2, e2) {
        var n = t2.exports = { version: "2.4.0" };
        "number" == typeof __e && (__e = n);
      }, function(t2, e2, n) {
        t2.exports = !n(3)(function() {
          return 7 != Object.defineProperty({}, "a", { get: function() {
            return 7;
          } }).a;
        });
      }, function(t2, e2) {
        t2.exports = function(t3) {
          try {
            return !!t3();
          } catch (t4) {
            return true;
          }
        };
      }, function(t2, e2) {
        var n = t2.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = n);
      }, function(t2, e2) {
        t2.exports = function(t3) {
          return "object" == typeof t3 ? null !== t3 : "function" == typeof t3;
        };
      }, function(t2, e2) {
        t2.exports = function(t3) {
          if (void 0 == t3)
            throw TypeError("Can't call method on  " + t3);
          return t3;
        };
      }, function(t2, e2) {
        var n = Math.ceil, r = Math.floor;
        t2.exports = function(t3) {
          return isNaN(t3 = +t3) ? 0 : (t3 > 0 ? r : n)(t3);
        };
      }, function(t2, e2, n) {
        var r = n(23), o = n(6);
        t2.exports = function(t3) {
          return r(o(t3));
        };
      }, function(t2, e2, n) {
        var r, o, i;
        !function(n2, s) {
          o = [], r = s, i = "function" == typeof r ? r.apply(e2, o) : r, !(void 0 !== i && (t2.exports = i));
        }(this, function() {
          "use strict";
          Array.prototype.find || Object.defineProperty(Array.prototype, "find", { value: function(t3) {
            if (null == this)
              throw new TypeError('"this" is null or not defined');
            var e3 = Object(this), n2 = e3.length >>> 0;
            if ("function" != typeof t3)
              throw new TypeError("predicate must be a function");
            for (var r2 = arguments[1], o2 = 0; o2 < n2; ) {
              var i2 = e3[o2];
              if (t3.call(r2, i2, o2, e3))
                return i2;
              o2++;
            }
          }, configurable: true, writable: true });
        });
      }, function(t2, e2, n) {
        t2.exports = { default: n(11), __esModule: true };
      }, function(t2, e2, n) {
        n(36), t2.exports = n(1).Object.keys;
      }, function(t2, e2) {
        t2.exports = function(t3) {
          if ("function" != typeof t3)
            throw TypeError(t3 + " is not a function!");
          return t3;
        };
      }, function(t2, e2, n) {
        var r = n(5);
        t2.exports = function(t3) {
          if (!r(t3))
            throw TypeError(t3 + " is not an object!");
          return t3;
        };
      }, function(t2, e2, n) {
        var r = n(8), o = n(32), i = n(31);
        t2.exports = function(t3) {
          return function(e3, n2, s) {
            var u, c = r(e3), a = o(c.length), f = i(s, a);
            if (t3 && n2 != n2) {
              for (; a > f; )
                if (u = c[f++], u != u)
                  return true;
            } else
              for (; a > f; f++)
                if ((t3 || f in c) && c[f] === n2)
                  return t3 || f || 0;
            return !t3 && -1;
          };
        };
      }, function(t2, e2) {
        var n = {}.toString;
        t2.exports = function(t3) {
          return n.call(t3).slice(8, -1);
        };
      }, function(t2, e2, n) {
        var r = n(12);
        t2.exports = function(t3, e3, n2) {
          if (r(t3), void 0 === e3)
            return t3;
          switch (n2) {
            case 1:
              return function(n3) {
                return t3.call(e3, n3);
              };
            case 2:
              return function(n3, r2) {
                return t3.call(e3, n3, r2);
              };
            case 3:
              return function(n3, r2, o) {
                return t3.call(e3, n3, r2, o);
              };
          }
          return function() {
            return t3.apply(e3, arguments);
          };
        };
      }, function(t2, e2, n) {
        var r = n(5), o = n(4).document, i = r(o) && r(o.createElement);
        t2.exports = function(t3) {
          return i ? o.createElement(t3) : {};
        };
      }, function(t2, e2) {
        t2.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
      }, function(t2, e2, n) {
        var r = n(4), o = n(1), i = n(16), s = n(21), u = "prototype", c = function(t3, e3, n2) {
          var a, f, h, l = t3 & c.F, p = t3 & c.G, d = t3 & c.S, v = t3 & c.P, _ = t3 & c.B, y = t3 & c.W, g = p ? o : o[e3] || (o[e3] = {}), b = g[u], m = p ? r : d ? r[e3] : (r[e3] || {})[u];
          p && (n2 = e3);
          for (a in n2)
            f = !l && m && void 0 !== m[a], f && a in g || (h = f ? m[a] : n2[a], g[a] = p && "function" != typeof m[a] ? n2[a] : _ && f ? i(h, r) : y && m[a] == h ? function(t4) {
              var e4 = function(e5, n3, r2) {
                if (this instanceof t4) {
                  switch (arguments.length) {
                    case 0:
                      return new t4();
                    case 1:
                      return new t4(e5);
                    case 2:
                      return new t4(e5, n3);
                  }
                  return new t4(e5, n3, r2);
                }
                return t4.apply(this, arguments);
              };
              return e4[u] = t4[u], e4;
            }(h) : v && "function" == typeof h ? i(Function.call, h) : h, v && ((g.virtual || (g.virtual = {}))[a] = h, t3 & c.R && b && !b[a] && s(b, a, h)));
        };
        c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, c.U = 64, c.R = 128, t2.exports = c;
      }, function(t2, e2) {
        var n = {}.hasOwnProperty;
        t2.exports = function(t3, e3) {
          return n.call(t3, e3);
        };
      }, function(t2, e2, n) {
        var r = n(24), o = n(28);
        t2.exports = n(2) ? function(t3, e3, n2) {
          return r.f(t3, e3, o(1, n2));
        } : function(t3, e3, n2) {
          return t3[e3] = n2, t3;
        };
      }, function(t2, e2, n) {
        t2.exports = !n(2) && !n(3)(function() {
          return 7 != Object.defineProperty(n(17)("div"), "a", { get: function() {
            return 7;
          } }).a;
        });
      }, function(t2, e2, n) {
        var r = n(15);
        t2.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t3) {
          return "String" == r(t3) ? t3.split("") : Object(t3);
        };
      }, function(t2, e2, n) {
        var r = n(13), o = n(22), i = n(34), s = Object.defineProperty;
        e2.f = n(2) ? Object.defineProperty : function(t3, e3, n2) {
          if (r(t3), e3 = i(e3, true), r(n2), o)
            try {
              return s(t3, e3, n2);
            } catch (t4) {
            }
          if ("get" in n2 || "set" in n2)
            throw TypeError("Accessors not supported!");
          return "value" in n2 && (t3[e3] = n2.value), t3;
        };
      }, function(t2, e2, n) {
        var r = n(20), o = n(8), i = n(14)(false), s = n(29)("IE_PROTO");
        t2.exports = function(t3, e3) {
          var n2, u = o(t3), c = 0, a = [];
          for (n2 in u)
            n2 != s && r(u, n2) && a.push(n2);
          for (; e3.length > c; )
            r(u, n2 = e3[c++]) && (~i(a, n2) || a.push(n2));
          return a;
        };
      }, function(t2, e2, n) {
        var r = n(25), o = n(18);
        t2.exports = Object.keys || function(t3) {
          return r(t3, o);
        };
      }, function(t2, e2, n) {
        var r = n(19), o = n(1), i = n(3);
        t2.exports = function(t3, e3) {
          var n2 = (o.Object || {})[t3] || Object[t3], s = {};
          s[t3] = e3(n2), r(r.S + r.F * i(function() {
            n2(1);
          }), "Object", s);
        };
      }, function(t2, e2) {
        t2.exports = function(t3, e3) {
          return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e3 };
        };
      }, function(t2, e2, n) {
        var r = n(30)("keys"), o = n(35);
        t2.exports = function(t3) {
          return r[t3] || (r[t3] = o(t3));
        };
      }, function(t2, e2, n) {
        var r = n(4), o = "__core-js_shared__", i = r[o] || (r[o] = {});
        t2.exports = function(t3) {
          return i[t3] || (i[t3] = {});
        };
      }, function(t2, e2, n) {
        var r = n(7), o = Math.max, i = Math.min;
        t2.exports = function(t3, e3) {
          return t3 = r(t3), t3 < 0 ? o(t3 + e3, 0) : i(t3, e3);
        };
      }, function(t2, e2, n) {
        var r = n(7), o = Math.min;
        t2.exports = function(t3) {
          return t3 > 0 ? o(r(t3), 9007199254740991) : 0;
        };
      }, function(t2, e2, n) {
        var r = n(6);
        t2.exports = function(t3) {
          return Object(r(t3));
        };
      }, function(t2, e2, n) {
        var r = n(5);
        t2.exports = function(t3, e3) {
          if (!r(t3))
            return t3;
          var n2, o;
          if (e3 && "function" == typeof (n2 = t3.toString) && !r(o = n2.call(t3)))
            return o;
          if ("function" == typeof (n2 = t3.valueOf) && !r(o = n2.call(t3)))
            return o;
          if (!e3 && "function" == typeof (n2 = t3.toString) && !r(o = n2.call(t3)))
            return o;
          throw TypeError("Can't convert object to primitive value");
        };
      }, function(t2, e2) {
        var n = 0, r = Math.random();
        t2.exports = function(t3) {
          return "Symbol(".concat(void 0 === t3 ? "" : t3, ")_", (++n + r).toString(36));
        };
      }, function(t2, e2, n) {
        var r = n(33), o = n(26);
        n(27)("keys", function() {
          return function(t3) {
            return o(r(t3));
          };
        });
      }, function(t2, e2) {
        !function(t3, e3) {
          "use strict";
          function n(t4) {
            this.time = t4.time, this.target = t4.target, this.rootBounds = t4.rootBounds, this.boundingClientRect = t4.boundingClientRect, this.intersectionRect = t4.intersectionRect || f(), this.isIntersecting = !!t4.intersectionRect;
            var e4 = this.boundingClientRect, n2 = e4.width * e4.height, r2 = this.intersectionRect, o2 = r2.width * r2.height;
            n2 ? this.intersectionRatio = o2 / n2 : this.intersectionRatio = this.isIntersecting ? 1 : 0;
          }
          function r(t4, e4) {
            var n2 = e4 || {};
            if ("function" != typeof t4)
              throw new Error("callback must be a function");
            if (n2.root && 1 != n2.root.nodeType)
              throw new Error("root must be an Element");
            this._checkForIntersections = i(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT), this._callback = t4, this._observationTargets = [], this._queuedEntries = [], this._rootMarginValues = this._parseRootMargin(n2.rootMargin), this.thresholds = this._initThresholds(n2.threshold), this.root = n2.root || null, this.rootMargin = this._rootMarginValues.map(function(t5) {
              return t5.value + t5.unit;
            }).join(" ");
          }
          function o() {
            return t3.performance && performance.now && performance.now();
          }
          function i(t4, e4) {
            var n2 = null;
            return function() {
              n2 || (n2 = setTimeout(function() {
                t4(), n2 = null;
              }, e4));
            };
          }
          function s(t4, e4, n2, r2) {
            "function" == typeof t4.addEventListener ? t4.addEventListener(e4, n2, r2 || false) : "function" == typeof t4.attachEvent && t4.attachEvent("on" + e4, n2);
          }
          function u(t4, e4, n2, r2) {
            "function" == typeof t4.removeEventListener ? t4.removeEventListener(e4, n2, r2 || false) : "function" == typeof t4.detatchEvent && t4.detatchEvent("on" + e4, n2);
          }
          function c(t4, e4) {
            var n2 = Math.max(t4.top, e4.top), r2 = Math.min(t4.bottom, e4.bottom), o2 = Math.max(t4.left, e4.left), i2 = Math.min(t4.right, e4.right), s2 = i2 - o2, u2 = r2 - n2;
            return s2 >= 0 && u2 >= 0 && { top: n2, bottom: r2, left: o2, right: i2, width: s2, height: u2 };
          }
          function a(t4) {
            var e4;
            try {
              e4 = t4.getBoundingClientRect();
            } catch (t5) {
            }
            return e4 ? (e4.width && e4.height || (e4 = { top: e4.top, right: e4.right, bottom: e4.bottom, left: e4.left, width: e4.right - e4.left, height: e4.bottom - e4.top }), e4) : f();
          }
          function f() {
            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };
          }
          function h(t4, e4) {
            for (var n2 = e4; n2; ) {
              if (n2 == t4)
                return true;
              n2 = l(n2);
            }
            return false;
          }
          function l(t4) {
            var e4 = t4.parentNode;
            return e4 && 11 == e4.nodeType && e4.host ? e4.host : e4;
          }
          if ("IntersectionObserver" in t3 && "IntersectionObserverEntry" in t3 && "intersectionRatio" in t3.IntersectionObserverEntry.prototype)
            return void ("isIntersecting" in t3.IntersectionObserverEntry.prototype || Object.defineProperty(t3.IntersectionObserverEntry.prototype, "isIntersecting", { get: function() {
              return this.intersectionRatio > 0;
            } }));
          var p = [];
          r.prototype.THROTTLE_TIMEOUT = 100, r.prototype.POLL_INTERVAL = null, r.prototype.USE_MUTATION_OBSERVER = true, r.prototype.observe = function(t4) {
            var e4 = this._observationTargets.some(function(e5) {
              return e5.element == t4;
            });
            if (!e4) {
              if (!t4 || 1 != t4.nodeType)
                throw new Error("target must be an Element");
              this._registerInstance(), this._observationTargets.push({ element: t4, entry: null }), this._monitorIntersections(), this._checkForIntersections();
            }
          }, r.prototype.unobserve = function(t4) {
            this._observationTargets = this._observationTargets.filter(function(e4) {
              return e4.element != t4;
            }), this._observationTargets.length || (this._unmonitorIntersections(), this._unregisterInstance());
          }, r.prototype.disconnect = function() {
            this._observationTargets = [], this._unmonitorIntersections(), this._unregisterInstance();
          }, r.prototype.takeRecords = function() {
            var t4 = this._queuedEntries.slice();
            return this._queuedEntries = [], t4;
          }, r.prototype._initThresholds = function(t4) {
            var e4 = t4 || [0];
            return Array.isArray(e4) || (e4 = [e4]), e4.sort().filter(function(t5, e5, n2) {
              if ("number" != typeof t5 || isNaN(t5) || t5 < 0 || t5 > 1)
                throw new Error("threshold must be a number between 0 and 1 inclusively");
              return t5 !== n2[e5 - 1];
            });
          }, r.prototype._parseRootMargin = function(t4) {
            var e4 = t4 || "0px", n2 = e4.split(/\s+/).map(function(t5) {
              var e5 = /^(-?\d*\.?\d+)(px|%)$/.exec(t5);
              if (!e5)
                throw new Error("rootMargin must be specified in pixels or percent");
              return { value: parseFloat(e5[1]), unit: e5[2] };
            });
            return n2[1] = n2[1] || n2[0], n2[2] = n2[2] || n2[0], n2[3] = n2[3] || n2[1], n2;
          }, r.prototype._monitorIntersections = function() {
            this._monitoringIntersections || (this._monitoringIntersections = true, this.POLL_INTERVAL ? this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL) : (s(t3, "resize", this._checkForIntersections, true), s(e3, "scroll", this._checkForIntersections, true), this.USE_MUTATION_OBSERVER && "MutationObserver" in t3 && (this._domObserver = new MutationObserver(this._checkForIntersections), this._domObserver.observe(e3, { attributes: true, childList: true, characterData: true, subtree: true }))));
          }, r.prototype._unmonitorIntersections = function() {
            this._monitoringIntersections && (this._monitoringIntersections = false, clearInterval(this._monitoringInterval), this._monitoringInterval = null, u(t3, "resize", this._checkForIntersections, true), u(e3, "scroll", this._checkForIntersections, true), this._domObserver && (this._domObserver.disconnect(), this._domObserver = null));
          }, r.prototype._checkForIntersections = function() {
            var t4 = this._rootIsInDom(), e4 = t4 ? this._getRootRect() : f();
            this._observationTargets.forEach(function(r2) {
              var i2 = r2.element, s2 = a(i2), u2 = this._rootContainsTarget(i2), c2 = r2.entry, f2 = t4 && u2 && this._computeTargetAndRootIntersection(i2, e4), h2 = r2.entry = new n({ time: o(), target: i2, boundingClientRect: s2, rootBounds: e4, intersectionRect: f2 });
              c2 ? t4 && u2 ? this._hasCrossedThreshold(c2, h2) && this._queuedEntries.push(h2) : c2 && c2.isIntersecting && this._queuedEntries.push(h2) : this._queuedEntries.push(h2);
            }, this), this._queuedEntries.length && this._callback(this.takeRecords(), this);
          }, r.prototype._computeTargetAndRootIntersection = function(n2, r2) {
            if ("none" != t3.getComputedStyle(n2).display) {
              for (var o2 = a(n2), i2 = o2, s2 = l(n2), u2 = false; !u2; ) {
                var f2 = null, h2 = 1 == s2.nodeType ? t3.getComputedStyle(s2) : {};
                if ("none" == h2.display)
                  return;
                if (s2 == this.root || s2 == e3 ? (u2 = true, f2 = r2) : s2 != e3.body && s2 != e3.documentElement && "visible" != h2.overflow && (f2 = a(s2)), f2 && (i2 = c(f2, i2), !i2))
                  break;
                s2 = l(s2);
              }
              return i2;
            }
          }, r.prototype._getRootRect = function() {
            var t4;
            if (this.root)
              t4 = a(this.root);
            else {
              var n2 = e3.documentElement, r2 = e3.body;
              t4 = { top: 0, left: 0, right: n2.clientWidth || r2.clientWidth, width: n2.clientWidth || r2.clientWidth, bottom: n2.clientHeight || r2.clientHeight, height: n2.clientHeight || r2.clientHeight };
            }
            return this._expandRectByRootMargin(t4);
          }, r.prototype._expandRectByRootMargin = function(t4) {
            var e4 = this._rootMarginValues.map(function(e5, n3) {
              return "px" == e5.unit ? e5.value : e5.value * (n3 % 2 ? t4.width : t4.height) / 100;
            }), n2 = { top: t4.top - e4[0], right: t4.right + e4[1], bottom: t4.bottom + e4[2], left: t4.left - e4[3] };
            return n2.width = n2.right - n2.left, n2.height = n2.bottom - n2.top, n2;
          }, r.prototype._hasCrossedThreshold = function(t4, e4) {
            var n2 = t4 && t4.isIntersecting ? t4.intersectionRatio || 0 : -1, r2 = e4.isIntersecting ? e4.intersectionRatio || 0 : -1;
            if (n2 !== r2)
              for (var o2 = 0; o2 < this.thresholds.length; o2++) {
                var i2 = this.thresholds[o2];
                if (i2 == n2 || i2 == r2 || i2 < n2 != i2 < r2)
                  return true;
              }
          }, r.prototype._rootIsInDom = function() {
            return !this.root || h(e3, this.root);
          }, r.prototype._rootContainsTarget = function(t4) {
            return h(this.root || e3, t4);
          }, r.prototype._registerInstance = function() {
            p.indexOf(this) < 0 && p.push(this);
          }, r.prototype._unregisterInstance = function() {
            var t4 = p.indexOf(this);
            t4 != -1 && p.splice(t4, 1);
          }, t3.IntersectionObserver = r, t3.IntersectionObserverEntry = n;
        }(window, document);
      }, function(e2, n) {
        e2.exports = t;
      }, function(t2, n) {
        t2.exports = e;
      }]);
    });
  }
});
export default require_Vueresize();
//# sourceMappingURL=vue-resize-directive.js.map
